{
  "blocks" : [
    {
      "text" : {
        "text" : "A new haptic pattern was shared!",
        "type" : "plain_text"
      },
      "type" : "header"
    },
    {
      "text" : {
        "text" : "üõ†Ô∏è _This message was sent for development purposes, please ignore._",
        "type" : "mrkdwn"
      },
      "type" : "section"
    },
    {
      "text" : {
        "text" : "*why_people* has shared a new haptic pattern named *Events and Parameters*",
        "type" : "mrkdwn"
      },
      "type" : "section"
    },
    {
      "text" : {
        "text" : "*Platform:* ü§ñ Android",
        "type" : "mrkdwn"
      },
      "type" : "section"
    },
    {
      "text" : {
        "text" : "```\n\/\/ Version: 1\n\/\/\n\/\/ \"Events and Parameters\" by why_people\n\/\/\n\/\/ This is a cool pattern\n\nexport const eventsAndParameters = hapticPattern(\n  events(\n    continuousEvent(0.0, 2.0, { \n      DecayTime: 0.9,\n      HapticIntensity: 0.5,\n      HapticSharpness: 0.67 \n    }),\n    transientEvent(0.1, { HapticIntensity: 0.8, HapticSharpness: 0.2 }),\n    soundEffectEvent(\n      \"bang.caf\",\n      0.5,\n      { AudioVolume: 0.5 },\n      {\n        EventWaveformUseVolumeEnvelope: false,\n        EventWaveformLoopEnabled: false,\n        EventDuration: 3.0\n      }\n    ),\n    continuousSoundEvent(\n      2.0,\n      2.0,\n      { \n        AudioBrightness: 0.9,\n        AudioPitch: 0.6,\n        AudioVolume: 0.8 \n      },\n      { EventWaveformUseVolumeEnvelope: true }\n    )\n  ),\n  parameters(\n    dynamicParameter(\"AudioReleaseTimeControl\", 0.4, 0.5),\n    parameterCurve(\"AudioPanControl\", 0.0, [keyFrame(1.0, 0.0)]),\n    parameterCurve(\"HapticIntensityControl\", 0.0, [\n      keyFrame(0.1, 0.0),\n      keyFrame(0.8, 0.5),\n      keyFrame(0.4, 1.2)\n    ])\n  )\n)```",
        "type" : "mrkdwn"
      },
      "type" : "section"
    }
  ],
  "channel" : "test"
}